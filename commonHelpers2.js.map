{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\n// additional style\nimport \"izitoast/dist/css/iziToast.min.css\";      \n// strict mode\n'use strict'\n\n// define selectors\nconst form = document.querySelector(\".form\");\nconst delayInput = form.querySelector(\"input[name='delay']\");\nconst selectedState = form.elements.state;\nconst submitBtn = document.querySelector(\".submit-button\");\n\n// init variables\nlet delayValue; \nlet stateValue;\n\n// declare promise function\nconst promise = (state, delay) => { \n        return new Promise((resolve, reject) => { \n            setTimeout(() => { \n                if (state === \"fulfilled\") {\n                    resolve(\n                        iziToast.success({\n                            title: 'OK',\n                            message: `Fulfilled promise in ${delay} ms`\n                        }));\n                } else if (state === \"rejected\") { \n                    reject(\n                         iziToast.error({\n                            title: 'Error',\n                            message: `Rejected promise in ${delay} ms`\n                        }));\n                }\n            }, delay);\n        });\n    };\n\n// set event listener on the form fields    \nform.addEventListener(\"input\", () => { \n    // define State value\n    stateValue = selectedState.value;\n    // define Delay value\n    if (delayInput.value) {\n        (delayInput.value >= 0) ?\n            (\n                submitBtn.disabled = false,\n                delayValue = delayInput.value\n            ) : (\n                submitBtn.disabled = true,\n                iziToast.error({\n                    title: 'Error',\n                    message: 'Delay cannot be negative'\n                }));\n    } else { submitBtn.disabled = true; };\n});\n\n// set event listener on the Create Notification button\nform.addEventListener(\"submit\", e => { \n    // prevent page reload on submit\n    e.preventDefault();\n    // create promise\n    promise(stateValue, delayValue)\n        .then(() => { \n            console.log(\"Promise fulfilled successfully\");\n        })\n        .catch(() => { \n            console.error(\"Promise rejected\");\n        });\n});\n"],"names":["form","delayInput","selectedState","submitBtn","delayValue","stateValue","promise","state","delay","resolve","reject","iziToast"],"mappings":"wIAOA,MAAMA,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAaD,EAAK,cAAc,qBAAqB,EACrDE,EAAgBF,EAAK,SAAS,MAC9BG,EAAY,SAAS,cAAc,gBAAgB,EAGzD,IAAIC,EACAC,EAGJ,MAAMC,EAAU,CAACC,EAAOC,IACT,IAAI,QAAQ,CAACC,EAASC,IAAW,CACpC,WAAW,IAAM,CACTH,IAAU,YACVE,EACIE,EAAS,QAAQ,CACb,MAAO,KACP,QAAS,wBAAwBH,CAAK,KACzC,CAAA,CAAC,EACCD,IAAU,YACjBG,EACKC,EAAS,MAAM,CACZ,MAAO,QACP,QAAS,uBAAuBH,CAAK,KACxC,CAAA,CAAC,CAEb,EAAEA,CAAK,CACpB,CAAS,EAITR,EAAK,iBAAiB,QAAS,IAAM,CAEjCK,EAAaH,EAAc,MAEvBD,EAAW,MACVA,EAAW,OAAS,GAEbE,EAAU,SAAW,GACrBC,EAAaH,EAAW,QAExBE,EAAU,SAAW,GACrBQ,EAAS,MAAM,CACX,MAAO,QACP,QAAS,0BACZ,CAAA,GACJR,EAAU,SAAW,EAClC,CAAC,EAGDH,EAAK,iBAAiB,SAAU,GAAK,CAEjC,EAAE,eAAc,EAEhBM,EAAQD,EAAYD,CAAU,EACzB,KAAK,IAAM,CACR,QAAQ,IAAI,gCAAgC,CACxD,CAAS,EACA,MAAM,IAAM,CACT,QAAQ,MAAM,kBAAkB,CAC5C,CAAS,CACT,CAAC"}